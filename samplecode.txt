#include <SoftwareSerial.h>
#include <SPI.h>
#include <Ethernet.h>

// Create a SoftwareSerial object to communicate with the GSM module
SoftwareSerial sim(10, 11);  // RX, TX

// Replace these with your network settings
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192, 168, 1, 177);
IPAddress server(192, 168, 1, 100); // IP of your server

// Create an Ethernet client
EthernetClient client;

void setup() {
  Serial.begin(9600);
  sim.begin(9600);
  delay(1000);

  sim.println("AT+CMGF=1");
  delay(200);
  sim.println("AT+CNMI=2,2,0,0,0");
  delay(200);

  Ethernet.begin(mac, ip);
  delay(1000);
  
  Serial.println("System Ready and Waiting for New SMS...");
}

void loop() {
  if (sim.available()) {
    String smsData = sim.readString();
    Serial.println("New SMS Received:");
    Serial.println(smsData);
    
    String messageContent = extractMessageContent(smsData);

    if (client.connect(server, 3000)) { // Connect to server on port 3000
      client.println("POST /sms HTTP/1.1");
      client.println("Host: 192.168.1.100"); // Server IP
      client.println("Content-Type: application/json");
      client.println("Connection: close");
      client.print("Content-Length: ");
      client.println(messageContent.length());
      client.println();
      client.print("{\"message\":\"");
      client.print(messageContent);
      client.println("\"}");
      client.stop();
    }
  }
}

String extractMessageContent(String smsData) {
  int messageStartIndex = smsData.indexOf("\",\"") + 6;  // Skip the metadata
  if (messageStartIndex != -1) {
    return smsData.substring(messageStartIndex);
  }
  return "";
}
